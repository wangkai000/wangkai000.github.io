import{u as p,_ as i}from"./WrapperPost-DNTOMIRR.js";import{o as s,g as r,w as c,e as t,B as e}from"./app-DgMLzhl7.js";import"./dayjs.min-Bp82p9jx.js";import"./dark-CH-lC5zj.js";const h=t("div",{class:"prose m-auto slide-enter-content"},[t("p",null,[t("div",{class:"table-of-contents"},[t("div",{class:"table-of-contents-anchor hidden"},[t("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 24 24"},[t("path",{fill:"currentColor",d:"M3 4h18v2H3zm0 7h12v2H3zm0 7h18v2H3z"})])]),t("ul",null,[t("li",null,[t("a",{href:"#贝塞尔曲线的公式推导"},"贝塞尔曲线的公式推导 "),t("ul",null,[t("li",null,[t("a",{href:"#_1-线性贝塞尔曲线"},"1. 线性贝塞尔曲线 ")]),t("li",null,[t("a",{href:"#_2-二次方贝塞尔曲线"},"2. 二次方贝塞尔曲线 ")]),t("li",null,[t("a",{href:"#_3-三次方贝塞尔曲线"},"3. 三次方贝塞尔曲线 ")])])]),t("li",null,[t("a",{href:"#svg-路径-path-的贝塞尔曲线"},"SVG 路径 Path 的贝塞尔曲线 "),t("ul",null,[t("li",null,[t("a",{href:"#_1-二维贝塞尔曲线（切图组合-q）"},"1. 二维贝塞尔曲线（切图组合 Q） ")]),t("li",null,[t("a",{href:"#_2-三维贝塞尔曲线（厕所组合-c）"},"2. 三维贝塞尔曲线（厕所组合 C） ")])])])])])]),t("img",{loading:"lazy",decoding:"async","data-nimg":"fill",src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925123554.png",width:"600"}),t("p",null,[t("small",null,"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆")]),t("blockquote",null,[t("p",null,[e("贝塞尔曲线可视化："),t("a",{href:"https://cubic-bezier.com/#.17,.67,.83,.67",target:"_blank",rel:"noopener"},"https://cubic-bezier.com/#.17,.67,.83,.67"),e(" SVG Path 编辑器: "),t("a",{href:"https://yqnn.github.io/svg-path-editor/",target:"_blank",rel:"noopener"},"https://yqnn.github.io/svg-path-editor/"),e(" 知乎转 YouTube 的视频地址: "),t("a",{href:"https://www.zhihu.com/zvideo/1574012392505241601",target:"_blank",rel:"noopener"},"https://www.zhihu.com/zvideo/1574012392505241601"),e(" 张鑫旭老师：SVG 的贝塞尔曲线指令 "),t("a",{href:"https://www.zhangxinxu.com/wordpress/2014/06/deep-understand-svg-path-bezier-curves-command/",target:"_blank",rel:"noopener"},"https://www.zhangxinxu.com/wordpress/2014/06/deep-understand-svg-path-bezier-curves-command/")])]),t("h1",{id:"贝塞尔曲线的公式推导",tabindex:"-1"},[e("贝塞尔曲线的公式推导 "),t("a",{class:"header-anchor",href:"#贝塞尔曲线的公式推导","aria-hidden":"true"},"#")]),t("h2",{id:"_1-线性贝塞尔曲线",tabindex:"-1"},[e("1. 线性贝塞尔曲线 "),t("a",{class:"header-anchor",href:"#_1-线性贝塞尔曲线","aria-hidden":"true"},"#")]),t("p",null,"这个是最基础的运动形成的曲线（其实就是直线）。"),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925115810.png",alt:"20230925115810"})]),t("p",null,"个人理解："),t("p",null,[e("求出 "),t("strong",null,"P 的位置与 t 之前的关系"),e("。 P 是运动的向量的位置， t 是运动的时间。")]),t("p",null,"第一步，明确几个定义，有两个点 P0 和 P1 ，构成一条直线。"),t("p",null,"然后有第三个点 P ， 点 P 在 P0 和 P1 构成的线段上运动，运动时间为 t ."),t("p",null,"那么点 P 的位置在 t 时间运动的路径就是贝塞尔曲线。"),t("p",null,"那么在坐标系中，用向量这样表示"),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925123554.png",alt:"20230925123554"})]),t("p",null,"这里有两个向量 P0 和 P1 ，然后还有在 P0 到 P1 上根据时间 t 运动的向量 P 。"),t("p",null,"那么如何求出 P 的位置。"),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925123910.png",alt:"20230925123910"})]),t("p",null,"这里很好理解，不做过多解释。其实第一行公式就不复杂，也很好理解，没有必要化简。但是化简的目的是为了在公式上更直观体现 P 与 (P0 和 P1) 之间的关系。"),t("p",null,"综上，P(t) = (1-t)P0 + tP1"),t("p",null,"这里简化表示：lerp(P0, P1, t) ，用 lerp 表示之间的关系。"),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925124405.png",alt:"20230925124405"})]),t("h2",{id:"_2-二次方贝塞尔曲线",tabindex:"-1"},[e("2. 二次方贝塞尔曲线 "),t("a",{class:"header-anchor",href:"#_2-二次方贝塞尔曲线","aria-hidden":"true"},"#")]),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925125419.png",alt:"20230925125419"}),e(" 其实相比于上一步的 线性贝塞尔曲线 推导，二次方贝塞尔曲线就是多增加了一个向量点。")]),t("p",null,"个人理解："),t("p",null,[t("strong",null,"这里首先还是要明确：已知的是三个向量 P0 、 P1 、 P2 和时间 t 。所要求导的是点 P 的位置与时间的关系。")]),t("p",null,"原来的两个向量点 P0 和 P1 ，现在多增加一个 P2 。然后 P0 和 P1 之间有个向量 P01 随着 t 发生位置改变， P1 和 P2 之间有个向量 P12 也是随着 t 发生位置改变。"),t("p",null,"这里其实就是两个线性贝塞尔曲线。"),t("p",null,"由上一步的 线性贝塞尔曲线 推导，我们能知道"),t("p",null,"P01 = (1-t)P0 + tP1 = lerp(P0, P1, t)"),t("p",null,"P02 = (1-t)P1 + tP2 = lerp(P1, P2, t)"),t("p",null,"这样 P01 和 和 P02 的位置就由已知的变量推导转换了，但是到目前 P 还未出场。"),t("p",null,"那么 P 的位置其实就是在 P01 和 P02 这两个向量之间。"),t("p",null,"就是可以把当前 P01 当做线性贝塞尔曲线的第一个点， P02 是第二个点， t 还是刚才的那个时间，而 P 的位置则是随着时间在 P01 和 P02 上运动。"),t("p",null,"那么这个时候就可以得出 P :"),t("p",null,"P = (1-t)P01 + tP12 = lerp(P01, P12, t)"),t("p",null,"这里看最初始的计算："),t("p",null,"P(t) = (1-t)P01 + tP12 = (1-t)((1-t)P0 + tP1) + t((1-t)P1 + tP2) = (1-t)^2 _ P0 + (1-t) _ t _ P1 + t _ (1-t)_P1 + t^2 _ P2 = (1-t)^2 _ P0 + 2t(1-t)P1 + t^2 _ P2"),t("p",null,"也是这样简化表达："),t("p",null,"P(t) = lerp(P01, P12, t) = lerp(lerp(P0, P1, t), lerp(P1, P2, t), t)"),t("h2",{id:"_3-三次方贝塞尔曲线",tabindex:"-1"},[e("3. 三次方贝塞尔曲线 "),t("a",{class:"header-anchor",href:"#_3-三次方贝塞尔曲线","aria-hidden":"true"},"#")]),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925132806.png",alt:"20230925132806"})]),t("p",null,"三次贝塞尔曲线其实跟上面同理，多一个向量点 P3 ，这里就不赘述了，直接推导。"),t("p",null,"这里点太多了，所以除了四个已知的向量点 P1 、 P2 、 P3 、 P4 ，其余的几个暂时的点用 ABCDEF 表示，如上图。"),t("p",null,"A = lerp(P0, P1, t) B = lerp(P1, P2, t) C = lerp(P2, P3, t) D = lerp(A, B, t) E = lerp(B, C, t) P = lerp(D, E, t)"),t("p",null,"当然我们需要的是 P 和 P1 、 P2 、 P3 、 P4 以及 t 之间的关系，这里化简暂时省略了。"),t("p",null,"也可以直接写出所有点的数学公式"),t("p",null,"A = (1-t)P0 + tP1 B = (1-t)P1 + tP2 C = (1-t)P2 + tP3 D = (1-t)A + tB E = (1-t)B + tC P = (1-t)D + tE"),t("p",null,"将其完全展开并化简得："),t("p",null,"P(t) = P0( -t^3 + 3t^2 - 3t + 1 ) + P1( 3 _ t^3 - 6 _ t^2 + 3t) + P2( -3 _ t^3 + 3 _ t^2 ) + P3( t^3 ) 综上推导，其实多次方的贝塞尔曲线始终是其低一级的曲线的 线性贝塞尔曲线。"),t("p",null,"在求导数的时候，可视化看出来，知道导数的方向，与其垂直的 90 度，也就是与曲线的相切的方向。"),t("p",null,"而在一阶导数的推导的时候，其实可以看出，就是点的速度。 二阶导数，就是点的速度的变化率，那就是加速度。 三维导数，就是加速度的变化率。"),t("p",null,"其实，也就是曲率。"),t("p",null,"K = (det( P’, p’‘)) / ||P’||^3"),t("h1",{id:"svg-路径-path-的贝塞尔曲线",tabindex:"-1"},[e("SVG 路径 Path 的贝塞尔曲线 "),t("a",{class:"header-anchor",href:"#svg-路径-path-的贝塞尔曲线","aria-hidden":"true"},"#")]),t("p",null,"在 SVG 中的 Path 使用贝塞尔曲线，从张鑫旭老师的文章中学到的记忆方法， “切图组合”和“厕所组合”。"),t("p",null,"从字面上理解，切图主要是在图，是二维的事情，所以对应是二维贝塞尔曲线。 厕所是三维世界的，所以对应的是三维贝塞尔曲线。"),t("p",null,"还有就是命令的对应，由上面可知，二维贝塞尔曲线有三个点，三维贝塞尔曲线有四个点。"),t("h2",{id:"_1-二维贝塞尔曲线（切图组合-q）",tabindex:"-1"},[e("1. 二维贝塞尔曲线（切图组合 Q） "),t("a",{class:"header-anchor",href:"#_1-二维贝塞尔曲线（切图组合-q）","aria-hidden":"true"},"#")]),t("p",null,"在 SVG 中，二维贝塞尔曲线对应的指令和参数是：（虚实） 因为是曲线，只显示两个点，所以好理解的是，显示第一个和第四个点。中间的都是控制点不显示。 而二维贝塞尔曲线的第一个点是前面的点，前面的点肯定不受这里影响，肯定会显示。然后最后一个点也肯定是显示，所以在二维贝塞尔曲线的指令中的两个坐标中的第一个是控制点，不会实际显示，第二个是真实点，会显示。"),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925142019.png",alt:"20230925142019"})]),t("pre",{class:"shiki shiki-themes github-dark catppuccin-latte",style:{"--s-dark":"#e1e4e8","--s-light":"#4c4f69","--s-dark-bg":"#24292e","--s-light-bg":"#eff1f5"},tabindex:"0"},[t("code",{class:"language-text"},[t("span",{class:"line"},[t("span",null,"Q x1 y1, x y")])])]),t("p",null,"这里只有两个点，分别是第二个点和第三个点，第一个点使用的是前面的那个点。比如"),t("pre",{class:"shiki shiki-themes github-dark catppuccin-latte",style:{"--s-dark":"#e1e4e8","--s-light":"#4c4f69","--s-dark-bg":"#24292e","--s-light-bg":"#eff1f5"},tabindex:"0"},[t("code",{class:"language-text"},[t("span",{class:"line"},[t("span",null,"M 0 10 Q 5 5 , 10 10")])])]),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925142308.png",alt:"20230925142308"})]),t("p",null,"这里贝塞尔曲线第一个点也就是起始点是 0 10 ，第二个点是 5 5 ，第三个点是 10 10 。"),t("h2",{id:"_2-三维贝塞尔曲线（厕所组合-c）",tabindex:"-1"},[e("2. 三维贝塞尔曲线（厕所组合 C） "),t("a",{class:"header-anchor",href:"#_2-三维贝塞尔曲线（厕所组合-c）","aria-hidden":"true"},"#")]),t("p",null,"在 SVG 中，三维贝塞尔曲线对应的指令和参数是：（虚虚实）"),t("pre",{class:"shiki shiki-themes github-dark catppuccin-latte",style:{"--s-dark":"#e1e4e8","--s-light":"#4c4f69","--s-dark-bg":"#24292e","--s-light-bg":"#eff1f5"},tabindex:"0"},[t("code",{class:"language-text"},[t("span",{class:"line"},[t("span",null," C x1 y1, x2 y2, x y")])])]),t("p",null,"这里有三个点，跟上面同理，第一个点使用的是之前的坐标，这里的三个分别是第二、三、四点。 在 SVG 中，因为是曲线只显示两个点，所以其四个点对应的也是显示、不显示、不显示、显示。"),t("p",null,"而针对三维贝塞尔曲线的指令，更好理解的是，第一个点使用的是前面的那个点，前面的点肯定不受这里影响，肯定会显示。最后一个点也是会显示，所以中间的两个点是不显示的控制点。"),t("p",null,"示例："),t("pre",{class:"shiki shiki-themes github-dark catppuccin-latte",style:{"--s-dark":"#e1e4e8","--s-light":"#4c4f69","--s-dark-bg":"#24292e","--s-light-bg":"#eff1f5"},tabindex:"0"},[t("code",{class:"language-text"},[t("span",{class:"line"},[t("span",null,"M 0 10 C 0 7 10 13 10 10")])])]),t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/images20230925144154.png",alt:"20230925144154"})])],-1),_="贝塞尔曲线公式推导",b="2023/09/25",f="贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆",A=["#全部","#一般般"],k="https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/imagesnest-route.gif",y="https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png",w="贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆",C=[{property:"og:title",content:"贝塞尔曲线公式推导"},{name:"twitter:title",content:"贝塞尔曲线公式推导"},{name:"description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{name:"twitter:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:card",content:"summary_large_image"}],v={__name:"01-贝塞尔曲线公式推导",setup(o,{expose:l}){const n={title:"贝塞尔曲线公式推导",date:"2023/09/25",desc:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆",tags:["#全部","#一般般"],cover:"https://cdn.jsdelivr.net/gh/pinky-pig/pic-bed/imagesnest-route.gif",image:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png",description:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆",meta:[{property:"og:title",content:"贝塞尔曲线公式推导"},{name:"twitter:title",content:"贝塞尔曲线公式推导"},{name:"description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{name:"twitter:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:card",content:"summary_large_image"}]};return l({frontmatter:n}),p({title:"贝塞尔曲线公式推导",meta:[{property:"og:title",content:"贝塞尔曲线公式推导"},{name:"twitter:title",content:"贝塞尔曲线公式推导"},{name:"description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{name:"twitter:description",content:"贝塞尔曲线的公式推导，和 SVG 中 Path 的贝塞尔曲线指令的理解记忆"},{property:"og:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:image",content:"https://mmeme.me/og%2F01-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.png"},{name:"twitter:card",content:"summary_large_image"}]}),(d,P)=>{const a=i;return s(),r(a,{frontmatter:n},{default:c(()=>[h]),_:1})}}};export{k as cover,b as date,v as default,f as desc,w as description,y as image,C as meta,A as tags,_ as title};
