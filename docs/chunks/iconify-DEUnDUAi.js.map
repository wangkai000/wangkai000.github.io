{"version":3,"file":"iconify-DEUnDUAi.js","sources":["../../node_modules/.pnpm/@iconify+vue@4.1.2_vue@3.4.33_typescript@5.5.3_/node_modules/@iconify/vue/dist/iconify.mjs"],"sourcesContent":["import { h, defineComponent } from 'vue';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\nconst browserStorageLimit = 50;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    const attr = prefix.slice(0, 1) + 'Flip';\n    // vertical-flip\n    customisationAliases[prefix + '-flip'] = attr;\n    // v-flip\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n    // verticalFlip\n    customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    const componentProps = { ...svgDefaults };\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Copy style\n    const style = {};\n    const propsStyle = props.style;\n    const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\n        ? propsStyle\n        : {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n            case 'mode':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default: {\n                const alias = customisationAliases[key];\n                if (alias) {\n                    // Aliases for boolean customisations\n                    if (value === true || value === 'true' || value === 1) {\n                        customisations[alias] = true;\n                    }\n                }\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n            }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add innerHTML and style to props\n        componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n        // Render icon\n        return h('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return h('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = {\n    ...defaultIconProps,\n    body: '',\n};\nconst Icon = defineComponent({\n    // Do not inherit other attributes: it is handled by render()\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Current icon name\n            _name: '',\n            // Loading\n            _loadingIcon: null,\n            // Mounted status\n            iconMounted: false,\n            // Callback counter to trigger re-render\n            counter: 0,\n        };\n    },\n    mounted() {\n        // Mark as mounted\n        this.iconMounted = true;\n    },\n    unmounted() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: icon,\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (!data) {\n                // Icon data is not available\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    if (data !== null) {\n                        // Icon was not loaded\n                        this._loadingIcon = {\n                            name: icon,\n                            abort: loadIcons([iconName], () => {\n                                this.counter++;\n                            }),\n                        };\n                    }\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render() {\n        // Re-render when counter changes\n        this.counter;\n        const props = this.$attrs;\n        // Get icon data\n        const icon = (this.iconMounted || props.ssr)\n            ? this.getIcon(props.icon, props.onLoad)\n            : null;\n        // Validate icon object\n        if (!icon) {\n            return render(emptyIcon, props);\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                class: (typeof props['class'] === 'string'\n                    ? props['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconLoaded as iconExists, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","tree","icons","aliases","create","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","addCollection","added","err","addIconToStorage","addIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","id","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cached","cachedReundancy","getRedundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","browserStorageLimit","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","storeInBrowserStorage","store","set","delete","from","stringify","lastValue","updateLastModified","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","has","updateCallbacks","loadIcons","sortedIcons","sort","a","b","localeCompare","lastIcon","localStorage","sortIcons","listToIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","console","loadNewIcons","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","replace","value2","defaultExtendedIconCustomisations","inline","svgDefaults","xmlns","role","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","webkitMask","mask","background","customisationAliases","fixSize","render","props","customisations","valueType","mergeCustomisations","componentProps","mode","style","propsStyle","customStyle","color","alias","fullIcon","fullCustomisations","box","transformations","tempValue","rotation","unshift","start","end","content","tag","defs","endEnd","splitSVGDefs","wrapSVGContent","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","isUnsetKeyword","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","ids","exec","suffix","newID","escapedID","RegExp","replaceIDs","h","useMask","html","renderAttribsHTML","iconToHTML","svg","encodeSVGforURL","svgToData","document","IconifyPreload","preload","e","IconifyProviders","providers","emptyIcon","Icon","defineComponent","inheritAttrs","_name","_loadingIcon","iconMounted","mounted","this","unmounted","abortLoading","methods","getIcon","onload","iconName","getIconData","classes","$attrs","ssr","onLoad","newProps","class"],"mappings":"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","x_google_ignoreList":[0]}